{"version":3,"sources":["uiComponents/modal.jsx","data.jsx","uiComponents/index.jsx","actions/index.jsx","App.js","reducer.jsx","store.jsx","index.js"],"names":["Modal","props","useState","periodData","setPeriodData","periods","useEffect","map","obj","key","push","start_time","end_time","id","className","onClick","closeModal","selectedUser","real_name","type","onChange","e","onDateChange","USER_DATA","connect","state","usersData","reducer","dispatch","userList","setUserList","setSelectedUser","selectedDate","setDate","payload","members","target","value","param","params","date","peroids","obj1","activity_periods","obj2","Date","startDate","endDate","getFullYear","getMonth","getDate","userListArray","App","intialState","action","middleware","applyMiddleware","promise","thunk","logger","store","createStore","undefined","combineReducers","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.554c47ec.chunk.js","sourcesContent":["import React,{useEffect,useState} from 'react';\n\nfunction Modal(props) {\n\n    const [periodData,setPeriodData]=useState()\n    let periods=props.periods\n    useEffect(()=>{\n        let periodData=[]\n        if(periods){\n            periods.map((obj,key)=>{\n                periodData.push(\n                    <tr key={key}>\n                        <th>{key+1}</th>\n                        <th>{obj.start_time}</th>\n                        <th>{obj.end_time}</th>\n                    </tr>\n                )\n                return obj;\n            })\n        }\n        setPeriodData(periodData)\n    },[periods])\n\n    return (\n        <div id=\"myModal\" className=\"modal\">\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <span className=\"close\" onClick={()=>{props.closeModal()}}>&times;</span>\n                    <h2>{props.selectedUser && props.selectedUser.real_name}</h2>\n                </div>\n                <div className=\"modal-body\">\n                    <input \n                        type=\"date\"\n                        onChange={(e)=>{props.onDateChange(e)}}\n                    />\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Peroid No</th>\n                                <th>Start Time</th>\n                                <th>End Time</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {periodData}\n                        </tbody>\n                    </table>\n                </div>\n          </div>\n        </div>\n    );\n}\n\nexport default Modal;\n\n\n\n ","export const USER_DATA={\n\t\"ok\": true,\n\t\"members\": [{\n\t\t\t\"id\": \"W012A3CDE\",\n\t\t\t\"real_name\": \"Egon Spengler\",\n\t\t\t\"tz\": \"America/Los_Angeles\",\n\t\t\t\"activity_periods\": [{\n\t\t\t\t\t\"start_time\": \"Feb 1 2020  1:33 PM\",\n\t\t\t\t\t\"end_time\": \"Feb 1 2020 1:54 PM\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"start_time\": \"Mar 1 2020  11:11 AM\",\n\t\t\t\t\t\"end_time\": \"Mar 1 2020 2:00 PM\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"start_time\": \"Mar 16 2020  5:33 PM\",\n\t\t\t\t\t\"end_time\": \"Mar 16 2020 8:02 PM\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"W07QCRPA4\",\n\t\t\t\"real_name\": \"Glinda Southgood\",\n\t\t\t\"tz\": \"Asia/Kolkata\",\n\t\t\t\"activity_periods\": [{\n\t\t\t\t\t\"start_time\": \"Feb 1 2020  1:33 PM\",\n\t\t\t\t\t\"end_time\": \"Feb 1 2020 1:54 PM\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"start_time\": \"Mar 1 2020  11:11 AM\",\n\t\t\t\t\t\"end_time\": \"Mar 1 2020 2:00 PM\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"start_time\": \"Mar 16 2020  5:33 PM\",\n\t\t\t\t\t\"end_time\": \"Mar 16 2020 8:02 PM\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}","import React,{useState,useEffect} from 'react';\nimport Modal from './modal';\nimport {connect} from 'react-redux'\nimport { GetUsersData, GetActivity } from '../actions';\n\n\nfunction MainComponent(props) {\n    const [userList,setUserList]=useState()\n    const [selectedUser,setSelectedUser]=useState()\n    const [selectedDate,setDate]=useState()\n\n    useEffect(()=>{\n        props.dispatch(GetUsersData())\n    })\n\n    let usersData=props.usersData\n    useEffect(()=>{\n        if(usersData){\n            let userListArray=[];\n            usersData.map((obj,key)=>{\n                userListArray.push(<span key={key} className=\"App-link\" onClick={()=>{setSelectedUser(obj); props.dispatch({ type:\"GOT_ACTIVITY_DATA\", payload: obj.activity_periods }) }}>{obj.real_name}</span>)\n                return obj\n            })\n            setUserList(userListArray)\n        }\n    },[usersData,props])\n\n    function closeModal(){\n        setSelectedUser(null)\n    }\n\n    function onDateChange(e){\n        setDate(e.target.value)\n        let params={};\n        params.id=selectedUser&&selectedUser.id\n        params.date=e.target.value\n        props.dispatch(GetActivity(params))\n    }\n\n    return(\n        <>\n            <div className=\"\">\n                <span className=\"heading\">Full Throttle Labs </span>\n            </div>\n            <div className=\"body\">\n                <p className=\"label\"> List of Users </p> \n                {userList}\n            </div>\n            {selectedUser && \n                <Modal \n                    selectedUser={selectedUser}\n                    closeModal={()=>closeModal()}\n                    selectedDate={selectedDate}\n                    onDateChange={(e)=>onDateChange(e)}\n                    periods={props.periods||[]}\n                />\n            }\n        </>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return {dispatch:dispatch }\n}\n\nconst mapStateToProps = (state,props)=>{\n    return {\n        usersData: state.reducer.usersData,\n        periods: state.reducer.periods\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MainComponent)\n\n ","import { USER_DATA } from '../data';\n\nexport const GetUsersData = (param) =>{\n\treturn(\n\t\tdispatch =>{\n\t\t\tlet users=[];\n\t\t\tusers=USER_DATA.members\n\t\t\tdispatch({type:'GOT_USERS_DATA',payload: users });\n\t\t}\n\t)\n}\n\n\nexport const GetActivity = (param) =>{\n\treturn(\n\t\tdispatch =>{\n\t\t\tlet peroids=[];\n\t\t\tUSER_DATA.members && USER_DATA.members.map((obj1)=>{\n\t\t\t\tif(obj1.id===param.id){\n\n\t\t\t\t\tif(!param.date){\n\t\t\t\t\t\tperoids=obj1.activity_periods;\n\t\t\t\t\t\treturn obj1;\n\t\t\t\t\t}\n\t\t\t\t\tobj1.activity_periods.map((obj2)=>{\n\t\t\t\t\t\tlet date=new Date(param.date)\n\t\t\t\t\t\tlet startDate=new Date(obj2.start_time)\n\t\t\t\t\t\tlet endDate=new Date(obj2.end_time)\n\t\t\t\t\t\tif(date.getFullYear() === startDate.getFullYear() && date.getMonth() === startDate.getMonth() && date.getDate() === startDate.getDate()){\n\t\t\t\t\t\t\tperoids.push(obj2)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(date.getFullYear() === endDate.getFullYear() && date.getMonth() === endDate.getMonth() && date.getDate() === endDate.getDate()){\n\t\t\t\t\t\t\tperoids.push(obj2)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn obj2;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\treturn obj1;\n\t\t\t})  \n\t\t\tdispatch({type:'GOT_ACTIVITY_DATA',payload: peroids });\n\t\t}\n\t)\n}\n\n\n","import React from 'react';\nimport './App.css';\nimport MainComponent from './uiComponents';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainComponent />\n    </div>\n  );\n}\n\nexport default App;\n","var intialState = {\n};\n    \nexport default function reducer(state=intialState,action){\n    switch (action.type) {\n        case 'GOT_USERS_DATA':\n            return {...state, usersData: action.payload }\n        case 'GOT_ACTIVITY_DATA':\n            return {...state, periods: action.payload }\n        default: \n        \tbreak;\n    }\n    return state\n}\n\n\n\n","import { applyMiddleware, createStore } from 'redux'\nimport { combineReducers } from 'redux'\n\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport promise from 'redux-promise-middleware'\n\nimport reducer from './reducer'\n\n\nconst middleware = applyMiddleware(promise, thunk, logger)\n\nconst rootReducer = ( state, action ) => {\n  if ( action.type === \"CLEAR_STORE\" ) {\n    state = undefined;\n  }\n      \n  return  combineReducers({\n    reducer\n})(state, action)\n}\n\nconst store = createStore(rootReducer, middleware)\nwindow.store = store\nexport default store\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux' \n\n\nimport 'babel-polyfill';\nimport store from './store'\n\n\nReactDOM.render(\n\t<Provider store={store}>\n\t    <App />\n\t </Provider>,\n  \tdocument.getElementById('root')\n);\n\n"],"sourceRoot":""}